import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  // get answers related to question
  const questions = api.exam.getAllQuestionsAndAnswers.useQuery();
  const exams = api.exam.getAllExams.useQuery();
  const questionList = questions.data;
  console.log(questions.data)
  //console.log(exams.isSuccess)
  //console.log(questions.isSuccess)
  
  const userAnswers = 0;
  return (
    <>
      <Head>
        <title>Exams - prepare yourself for the hardest exams in your life</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-slate-950 text-sm">
        <div className="header flex items-center justify-center text-whit py-4">
          <div className="container flex justify-between text-slate-100 px-4">
          <div>Exams âœ…</div>
          <div>List</div>
          </div>
        </div>
        <div className="hero flex items-center justify-center text-whit py-4">
        <div className="CTA-HERO text-slate-200 mt-24">
            <h1 className="text-6xl font-bold">Begin your niskopoziomowe journey ðŸ˜Š</h1>
        </div>
  
          </div>
          <div className="flex justify-center">
            <div className="container">
              <form className="formExam text-slate-50">
                {questionList?.map((q) => (
                  <div key={q.id} className="px-4 py-4 border rounded-xl my-4 mx-4">
                    <div>
                    {q.body}
                    </div>
                    {q.answers.map((a) => (
                    <div key={a.identifier}>
                      <input type="radio" name={q.id} value={a.identifier} id={`answer-${a.identifier}`} />
                      <label htmlFor={`answer-${a.identifier}`}>{a.body}</label>
                    </div>
                  ))}
             
                  
                  </div>
                ))}
              </form>
            </div>
          </div>

      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
