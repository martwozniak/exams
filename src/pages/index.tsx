import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { FormEvent, MouseEventHandler, useEffect } from "react";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  // get answers related to question
  const questions = api.exam.getAllQuestionsAndAnswers.useQuery();
  const exams = api.exam.getAllExams.useQuery();
  const questionList = questions.data;
  console.log(questions.data)
  //console.log(exams.isSuccess)
  //console.log(questions.isSuccess)
  // handleSubmit = (event) => {
  //   event.preventDefault();
  //   //console.log(event.target[0].value)
  // }
  const userAnswers = [
    
  ];
  // Set start timer time to now + 30 minutes
  let userPoints = 0;
  const  IsCorrect = (id : string, isCorrect : boolean, qId: string) : (MouseEventHandler<HTMLDivElement> | void | undefined) => {
    console.log(id)
    console.log(isCorrect)
    const currentTag = "input[name="+qId+"]";
    const answers = document.querySelectorAll(currentTag);
    if(isCorrect==true){
      console.log("Correct answer")
        const divId = "div-"+id;
        const answerId = "answer-"+id;
        const correctAnswer = document.getElementById(divId);
        const answersId = document.getElementById(answerId);

        console.log(correctAnswer?.classList)
        answersId.checked = true;
        // if input field are disabled, then do not add points
        if(!answersId.disabled) {
          userPoints++;
          correctAnswer?.classList.add("bg-green-500");
        }
    }else {
      console.log("Incorrect answer")
      const divId = "div-"+id;
      const answerId = "answer-"+id;
      const correctAnswer = document.getElementById(divId);
      const answersId = document.getElementById(answerId);
        if(!answersId.disabled) { 
          answersId.checked = true;
          correctAnswer?.classList.add("bg-red-500");
          // find correct answer add green colo
          const correctAnswerId = "answer-"+questions.data?.find((q) => q.id == qId)?.answers.find((a) => a.isCorrect == true)?.identifier;
          const correctAnswerDivId = "div-"+correctAnswerId;
          const correctAnswerDiv = document.getElementById(correctAnswerDivId);
          
        }
        // find correct answer add green color
        let correct = questionList?.find((q) => q.id == qId)?.answers.find((a) => a.isCorrect == true)?.identifier;
        console.log("correct:" + correct)
        let correctDiv = "div-"+correct;
        const corAns = document.getElementById(correctDiv);
        corAns?.classList.add("bg-green-500");
    }

    // Disable other options
    answers.forEach((answer) => {
      answer.disabled = true;
    } )
  };


  const handleSubmit = (event : (FormEvent)) : void =>  {
    event.preventDefault(); // Prevent form submission
    if (!event.target) return;
  };

  return (
    <>
      <Head>
        <title>Exams - prepare yourself for the hardest exams in your life</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-slate-950 text-sm main">
        <div className="header flex items-center justify-center text-whit py-4">
          <div className="container flex justify-between text-slate-100 px-4">
          <div>Exams âœ…</div>
          <div className="flex gap-2">
            <div className="cursor-pointer">Test 1 pytanie</div>
            <div className="cursor-pointer">Test 15 pytan</div>
            <div className="cursor-pointer">Test 100 pytan</div>
          </div>
          </div>
        </div>
        <div className="hero flex items-center justify-center text-whit py-4">
        <div className="CTA-HERO text-slate-200 mt-24">
            <h1 className="text-6xl font-bold">Begin your niskopoziomowe journey ðŸ˜Š</h1>
        </div>
  
          </div>
          <div className="flex justify-center">
            <div className="container">
              <form className="formExam text-slate-50" onSubmit={handleSubmit}>
                {questionList?.map((q) => (
                  <div key={q.id} className="px-4 py-4 border border-slate-800 rounded-xl my-4 mx-4">
                    <div className="px-2 py-2">
                    {q.body}
                    </div>
                    {q.answers.map((a) => (
                    <div key={a.identifier} onClick={
                      () => IsCorrect(a.identifier, a.isCorrect, q.id)
                    }  id={`div-${a.identifier}`} className="px-2 py-2 rounded-xl">
                      <input type="radio" name={q.id} value={a.identifier} id={`answer-${a.identifier}`}  className="mr-2" />
                      <label htmlFor={`answer-${a.identifier}`}>{a.body}</label>
                    </div>
                  ))}
             
                  </div>
                  
                ))}
                <button className="bg-slate-900 text-slate-50 px-4 py-2 rounded-xl mt-4 mx-4" >Check your answers</button>
                    <p>Time started:</p>
              </form>
            </div>
          </div>

      </main>
    </>
  );
};

export default Home;
